name: Run FastAPI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      keycloak:
        image: quay.io/keycloak/keycloak:26.1.3    # or whichever version you need
        env:
            KEYCLOAK_ADMIN: ${{ secrets.USERNAME }}
            KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.PASSWORD }}
        ports:
            - 8080:8080
        options: >-
          --entrypoint /opt/keycloak/bin/kc.sh
          --health-cmd "curl --fail http://localhost:8080"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
          --
          start-dev
       
    env:
        KEYCLOAK_URL: ${{ secrets.KEYCLOAK_URL}}
        REALM_NAME: ${{ secrets.REALM_NAME }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        KEYCLOAK_USERNAME: ${{ secrets.USERNAME }}
        KEYCLOAK_PASSWORD: ${{ secrets.PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug:List all files in backend directory
        run: ls -R backend/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install pytest mongomock fastapi uvicorn pymongo httpx python-dotenv python-jose fastapi_keycloak_middleware

      - name: Verify `pytest` installation
        run: pytest --version  
      - name: Debug environment
        run: |
          echo "KEYCLOAK_URL is set to: ${KEYCLOAK_URL}"
          echo "KEYCLOAK_REALM is set to: ${KEYCLOAK_REALM}"
          echo "KEYCLOAK_CLIENT_ID is set to: ${KEYCLOAK_CLIENT_ID}"
      - name: Wait for Keycloak to be ready
        run: |
          # A small wait or a health-check loop
          for i in $(seq 1 30); do
            echo "Checking Keycloak is up..."
            if curl -s http://localhost:8080/; then
              echo "Keycloak is responding."
              break
            fi
            sleep 2
          done
      - name: Fetch Keycloak Access Token
        run: |
          KEYCLOAK_TOKEN=$(curl -X POST "$KEYCLOAK_URL/realms/$REALM_NAME/protocol/openid-connect/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=$CLIENT_ID" \
            -d "grant_type=password" \
            -d "username=$KEYCLOAK_USERNAME" \
            -d "password=$KEYCLOAK_PASSWORD" | jq -r .access_token)
          echo "ACCESS_TOKEN=$KEYCLOAK_TOKEN" >> $GITHUB_ENV   

      - name: Run tests with pytest
        run: pytest backend/ --maxfail=1 --disable-warnings -v
